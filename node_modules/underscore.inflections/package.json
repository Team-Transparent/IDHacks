{
  "name": "underscore.inflections",
  "description": "Port of ActiveSupport::Inflector::Inflections for underscore.js",
  "version": "0.2.1",
  "keywords": [
    "inflections",
    "inflector",
    "underscore"
  ],
  "homepage": "https://geetarista.github.com/underscore.inflections",
  "bugs": {
    "url": "https://github.com/geetarista/underscore.inflections/issues"
  },
  "author": {
    "name": "Robby Colvin",
    "email": "geetarista@gmail.com",
    "url": "http://robbycolvin.com"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/geetarista/underscore.inflections.git"
  },
  "dependencies": {
    "underscore": ">=1.0",
    "underscore.string": ">=2.0.0"
  },
  "devDependencies": {
    "chai": "~1.0",
    "coffee-script": "~1.3",
    "docco": "~0.3",
    "mocha": "~1.9",
    "should": "~0.6"
  },
  "scripts": {
    "test": "mocha test/*.coffee"
  },
  "main": "lib/underscore.inflections.js",
  "readme": "# underscore.inflections [![Build Status](https://secure.travis-ci.org/geetarista/underscore.inflections.png)](http://travis-ci.org/geetarista/underscore.inflections)\n\nPort of ActiveSupport::Inflector::Inflections for Underscore.js.\n\nWorks with browser or Node.js.\n\n## Introduction\n\nI created this underscore mixin after trying out every other inflection library out there. I've created this as a direct port of Rails' version as much as possible.\n\nNote that right now, this only handles methods found in ActiveSupport::Inflector::Inflections since that's all I need right now. I may eventually split this out into separate inflector mixins that match all of ActiveSupport's.\n\n## Setup\n\n### Browser\n\nInclude both underscore.js and underscore.inflections on your page:\n\n```html\n<script src=\"underscore.js\" type=\"text/javascript\"></script>\n<script src=\"underscore.inflections.js\" type=\"text/javascript\"></script>\n```\n\n### Node.js\n\nFirst, install the mixin through npm:\n\n```bash\nnpm install underscore.inflections\n```\n\nRequire underscore.js and underscore.inflections:\n\n```javascript\nvar _ = require('underscore');\n_.mixin(require('underscore.inflections'));\n```\n\n**Note**: When using underscore in Node's REPL, be sure to choose a variable other than `_`, as that is a special symbol used for showing the last return value.\n\n## Usage\n\n### Singularize\n\nConverts a word to its singular form.\n\nExamples:\n\n```javascript\n_.singularize('posts');    //=> 'post'\n_.singularize('octopi');   //=> 'octopus'\n_.singularize('sheep');    //=> 'sheep'\n_.singularize('words');    //=> 'words'\n```\n\n### Pluralize\n\nConverts a word to its pluralized form.\n\nExamples:\n\n```javascript\n_.pluralize('post');      //=> 'posts'\n_.pluralize('octopus');   //=> 'octopi'\n_.pluralize('sheep');     //=> 'sheep'\n_.pluralize('words');     //=> 'words'\n```\n\n## Customizing\n\n### Singular\n\nAdds a rule for singularizing a word.\n\nExample:\n\n```javascript\n_.singular(/^(ox)en/i, '\\1');\n```\n\n### Plural\n\nAdds a rule for pluralizing a word.\n\nExample:\n\n```javascript\n_.plural(/^(ox)$/i, '\\1en');\n```\n\n### Irregular\n\nAdds a rule for an irregular word.\n\nExample:\n\n```javascript\n_.irregular('person', 'people');\n```\n\n### Uncountable\n\nAdds a rule for an uncountable word or words.\n\nExample:\n\n```javascript\n_.uncountable(['fish', 'sheep']);\n```\n\n### Acronym\n\nMakes the following inflection methods aware of acronyms: _.camelize, _.underscore, _.humanize, _.titleize\nSee inflections_test for a full specifications of the subtleties\n\n```javascript\n_.acronym(\"FBI\");\n_.camelize(\"fbi_file\"); //=> 'FBIFile'\n_.underscore(\"FBIFile\"); //=> 'fbi_file'\n```\n\n### Camelize\n\nExample:\n```javascript\n_.camelize('make_me_tall');  //=> 'MakeMeTall'\n```\n\nWhen passed false as second parameter it does not capitalize the first word\n\nExample:\n```javascript\n_.camelize('make_me_tall', false);  //=> 'makeMeTall'\n```\n\n### Underscore\n\nSeparate camel cased strings with underscores\n\nExample:\n```javascript\n_.underscore('INeedSomeSpace');  //=> 'i_need_some_space'\n```\n\n## Humanize\n\nFormat underscored strings for human friendly consumption\n\nExample:\n```javascript\n_.humanize('i_just_want_to_be_understood');  //=> 'I just want to be understood'\n```\n\nYou can also add humanizing rules by calling ```_.human```\n\nExample:\n```javascript\n_.human(/_cnt$/,'_count');\n_.humanize('jargon_cnt');  //=> 'Jargon count'\n```\n\n## titleize\n\nTitle case a underscored or camel cased string\n\nExample:\n```javascript\n_.titleize('three_blind_mice');  //=> 'Three Blind Mice'\n_.titleize('JackAndJill'); //=> 'Jack And Jill'\n```\n\n## License\n\nMIT. See `LICENSE`.\n",
  "readmeFilename": "README.md",
  "_id": "underscore.inflections@0.2.1",
  "dist": {
    "shasum": "101bd359e02af293aa5a1062748e963e208767f1",
    "tarball": "http://registry.npmjs.org/underscore.inflections/-/underscore.inflections-0.2.1.tgz"
  },
  "_from": "underscore.inflections@>=0.2.1 <0.3.0",
  "_npmVersion": "1.2.14",
  "_npmUser": {
    "name": "geetarista",
    "email": "geetarista@gmail.com"
  },
  "maintainers": [
    {
      "name": "geetarista",
      "email": "geetarista@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "101bd359e02af293aa5a1062748e963e208767f1",
  "_resolved": "https://registry.npmjs.org/underscore.inflections/-/underscore.inflections-0.2.1.tgz"
}
